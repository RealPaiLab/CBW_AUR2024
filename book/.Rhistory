options(repos = c(CRAN = 'https://cran.r-project.org')); BiocManager::install(ask=FALSE)
options(repos = c(CRAN = 'https://cran.r-project.org'));
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version="devel")
?BiocManager::install
BiocManager::install("netDx",dependencies=TRUE)
BiocManager::install("clusterExperiment")
BiocManager::install("clusterExperiment")
BiocManager::install("clusterExperiment")
citation('Biobase')
1.0394*30150
BiocManager::install("IdeoViz")
sessionInfo()
BiocManager::install("netDx")
BiocManager::install("netDx")
BiocManager::install("netDx",force=TRUE)
require(netDx)
convertToMAE()
?convertToMAE
data(xpr, pheno)
prot <- matrix(rnorm(100*20), ncol=20)
colnames(prot) <- sample(pheno$ID, 20)
rownames(prot) <- sprintf("protein%i",1:100)
myList <- list(rna = xpr, proteomic = prot, pheno = pheno)
MAE <- convertToMAE(myList)
MAE
sessionInfo()
install.packages("bookdown")
setwd("~/Pai_Lab/Grants/2022/CIHR 2022 Fall Project/Preliminary Data/Aim1_IanCheong/")
dat <- read.delim("de_genes.csv")
head(dat)
dat <- read.delim("de_genes.csv",sep=",")
head(dat)
nrow(dat)
hist(dat$p_val,n=100)
sum(dat$p_val_adj<0.05)
sum(dat$p_val<0.05 & dat$avg_log2FC < 0)
sum(dat$p_val_adj<0.05 & dat$avg_log2FC < 0)
library(MASS)
data(crabs)
?crabs
head(crabs)
crabs_meas = crabs[,c("FL","RW","CL","CW","BD")]
c_dist = dist(crabs_meas)
c_hclust = hclust(c_dist)
plot(c_hclust)
c_clusters = cutree(c_hclust,k = 2)
plot(c_hclust)
c_clusters = cutree(c_hclust,k = 2)
pairs(crabs_meas, col = c("orchid","forestgreen")[c_clusters])
pairs(crabs_meas, col = c("orchid","forestgreen")[factor(crabs$sp)])
pairs(crabs_meas, col = c("orchid","forestgreen")[factor(crabs$sex)])
c_pcs = prcomp(crabs_meas)
pairs(c_pcs$x, col = c("orchid","forestgreen")[factor(crabs$sp)])
pairs(c_pcs$x, col = c("orchid","forestgreen")[factor(crabs$sex)])
library(tsne)
c_tsne10 = tsne(crabs_meas,perplexity = 10)
install.packages("tsne")
library(Rtsne)
Rtsne::Rtsne(crabs_meas,perplexity=10)
x <- Rtsne::Rtsne(crabs_meas,perplexity=10)
plot(x)
plot(x[,1],x[,2])
plot(x$x, x$Y)
plot(x$x, x$y)
summary(x)
171/0.5
85000000 / 4
(85 * 1000* 1000) / 4
((85 * 1000* 1000)+1) / 4
((85 * 1000* 1000)+2) / 4
85000001
85000001/4
(85 * 10^6)+1
3600*4
require(plotrix)
plotMissMat <- function(x,xlab="columns",
ylab="rows",border=NA) {
x <- !is.na(x)
class(x) <- "numeric"
color2D.matplot(x,show.values=FALSE,axes=FALSE,
cs1=c(1,0),cs2=c(1,0),cs3=c(1,0),border=border,
cex=0.8,
xlab=xlab,ylab=ylab)
}
require(plotrix)
dat <- matrix(rnorm(100*10,mean=0,sd=1),nrow=100)
colnames(dat) <- c(rep("case",5), rep("control",5))
dim(dat)
plotMissMat(dat) # no missing data
dat2 <- dat;
dat2[sample(1000,10,F)] <- NA
plotMissMat(dat2) # unstructured missing data
dat3 <- dat;
dat3[80:100,6:10] <- NA
plotMissMat(dat3) # structured missing data
library(corrplot)
mouse_cor = cor(mouse_exp)
round(mouse_cor,2)
?corrplot
corrplot(mouse_cor,method = "color")
library(clValid)
data("mouse")
mouse_exp = mouse[,c("M1","M2","M3","NC1","NC2","NC3")]
head(mouse_exp)
plot(density(mouse_exp[,1]))
my_hclust = hclust(my_dist, method = "ward.D2")
my_dist <- dist(mouse_exp)
my_hclust = hclust(my_dist, method = "ward.D2")
plot(my_hclust)
setwd("~/software/CBW_AUR2024/book")
bookdown::render_book()
install.packages("tsne")
bookdown::render_book()
bookdown::render_book()
